// DDX Bricks Wiki - See https://developer.domo.com/docs/ddx-bricks
// for tips on getting started, linking to Domo data and debugging your app

//--------------------------------------------------
// Properties
//--------------------------------------------------
var startButtonLabel = 'Run';
var showTestFormEntryButton = false;

//Modify and add or delete the names of each parameter in the workflow
var param1Name = 'param1';

//Modify and add or delete the id for the input fields from the HTML for each parameter
var input1Id = 'inputPageId';

//  Modify this method to match get methods with each parameter type
function getParameters() {
  
	var params = {};  
  
  getTextEntryParam(params, param1Name, input1Id, '');
  
  return params;
}

//---------------------------------------------------
// For ultimate flexibility, modify the code below!
//---------------------------------------------------

//Available globals
var domo = window.domo;

var startButton = document.getElementById('startWorkflowButton');

startButton.innerText = startButtonLabel;

startButton.onclick = function startWorkflow() {
  
  var parameters = getParameters();
  startWorkflowWithParams("workflow1", parameters);
  
}

const startWorkflowWithParams = (alias, params) => {
  
  var startURL = '/domo/workflow/v1/models/' + alias + '/start';
  domo.post(startURL, params).then(data => {
        console.log(data);
        document.getElementById('resultText').innerText = `Workflow '${data.modelName}' started successfully`;
    }).catch(err => {
        console.log(err);
        document.getElementById('resultText').innerText = `Start failed`;
    })

};

//_______________________________
//
// Get Parameter methods
//_______________________________

function getTextEntryParam(params, paramName, inputId, defaultValue) {
  var textEntryElement = document.getElementById(inputId);
  if (textEntryElement.value)
	  params[paramName] = textEntryElement.value;
  else
	  params[paramName] = defaultValue;
}
